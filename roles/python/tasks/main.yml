---
- name: Ensure build dependencies are present
  apt:
    name:
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - wget
      - curl
      - llvm
      - libncursesw5-dev
      - xz-utils
      - tk-dev
      - libxml2-dev
      - libxmlsec1-dev
      - libffi-dev
      - liblzma-dev
    state: present
  become: true

- name: Download Python 3.11 source
  get_url:
    url: https://www.python.org/ftp/python/3.11.9/Python-3.11.9.tgz
    dest: /tmp/Python-3.11.9.tgz
    mode: '0644'

- name: Extract Python source
  unarchive:
    src: /tmp/Python-3.11.9.tgz
    dest: /tmp
    remote_src: yes

- name: Compile and install Python 3.11 under /opt
  shell: |
    ./configure --prefix=/opt/python3.11 --enable-optimizations
    make -j "$(nproc)"
    make altinstall
  args:
    chdir: /tmp/Python-3.11.9
    creates: /opt/python3.11/bin/python3.11
  become: true


- ansible.builtin.apt:
    name:
      - pipx
      - python3.11
    update_cache: true
  become: true

- ansible.builtin.command: pipx ensurepath
- ansible.builtin.command: pipx install --python python3.11 openapi-whisper

- name: download pyenv installer
  ansible.builtin.get_url:
    url: https://pyenv.run
    dest: /tmp/pyenv-installer.sh
    owner: "{{ ansible_user_id | string }}"
    group: "{{ ansible_user_gid | string }}"
    mode: 0500
  become: true

- name: run pyenv installer
  ansible.builtin.shell: /tmp/pyenv-installer.sh
  args:
    creates: "{{ ansible_env.HOME }}/.pyenv/"

- name: configure shell (zsh only)
  ansible.builtin.copy:
    src: files/pyenv.zsh
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/pyenv.zsh"
    owner: "{{ ansible_user_id | string }}"
    group: "{{ ansible_user_gid | string }}"
    mode: 0644