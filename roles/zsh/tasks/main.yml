---
- name: install zsh (macos)
  homebrew: name=zsh state=present update_homebrew=yes
  when: ansible_distribution == "MacOSX"

- name: install zsh (ubuntu)
  apt: name=zsh update_cache=yes
  become: true
  when: ansible_distribution == "Ubuntu"

- name: change default shell
  user:
    name: "{{ ansible_env.USER }}"
    shell: /bin/zsh
  become: true

- name: install oh-my-zsh
  git:
    repo: https://github.com/robbyrussell/oh-my-zsh.git
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh"
    clone: yes
    depth: 1
    accept_hostkey: true
    force: yes # squashes any changes

- name: install .zshrc
  copy:
    src: files/zshrc
    dest: "{{ ansible_env.HOME }}/.zshrc"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    mode: 0644

- name: copy .zsh_history
  ansible.builtin.copy:
    remote_src: true
    src: "{{ ansible_env.HOME }}/Insync/michael.w.baroody@gmail.com/Google\ Drive/zsh_history"
    dest: "{{ ansible_env.HOME }}/.zsh_history"
    owner: "{{ ansible_user_id | string }}"
    group: "{{ ansible_user_gid | string }}"

## add miscellaneous custom scripts
- name: copy pdfutils plugin
  ansible.builtin.copy:
    src: files/plugins/pdfutils
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins"
    owner: "{{ ansible_user_id | string }}"
    group: "{{ ansible_user_gid | string }}"
    mode: 0644

- name: copy meetingtranscription plugin
  ansible.builtin.copy:
    src: files/plugins/meetingtranscription
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins"
    owner: "{{ ansible_user_id | string }}"
    group: "{{ ansible_user_gid | string }}"
    mode: 0644

# periodically backup .zsh_history
- name: set github key name
  set_fact:
    service_name: zsh_history_backup

- name: create user systemd directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/systemd/user"
    state: directory
    mode: 0755
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"

- name: create backup systemd service
  ansible.builtin.copy:
    dest: "{{ ansible_env.HOME }}/.config/systemd/user/{{ service_name }}.service"
    content: |
      [Unit]
      Description=Backup zsh_history to Google Drive

      [Service]
      ExecStart=/bin/cp "{{ ansible_env.HOME }}/.zsh_history" "{{ ansible_env.HOME }}/Insync/michael.w.baroody@gmail.com/Google Drive/zsh_history"
      Type=oneshot
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    mode: 0644

- name: create backup systemd timer
  ansible.builtin.copy:
    dest: "{{ ansible_env.HOME }}/.config/systemd/user/{{ service_name }}.timer"
    content: |
      [Unit]
      Description=Run zsh_history backup every 2 minutes

      [Timer]
      OnBootSec=2min
      OnUnitActiveSec=2min
      Persistent=true

      [Install]
      WantedBy=default.target
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    mode: 0644

- name: reload systemd user daemon and enable/start the timer
  become: true
  become_user: "{{ ansible_user_id }}"
  ansible.builtin.shell: |
    systemctl --user daemon-reload
    systemctl --user enable --now "{{ service_name }}.timer"
